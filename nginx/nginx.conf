user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_geoip2_module.so;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    geoip2 GeoLite2-Country.mmdb {
       $geoip2_data_country_code default=US;
    }
    geoip2 GeoLite2-City.mmdb {
        $geoip2_data_city_name default="unknown";
        $geoip2_data_country_name default="unknown";
    }

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format json_analytics escape=json '{'
        '"msec": "$msec", '
        '"connection": "$connection", '
        '"connection_requests": "$connection_requests", '
        '"pid": "$pid", '
        '"request_id": "$request_id", '
        '"request_length": "$request_length", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"remote_port": "$remote_port", '
        '"time_local": "$time_local", '
        '"time_iso8601": "$time_iso8601", '
        '"request": "$request", '
        '"request_uri": "$request_uri", '
        '"args": "$args", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"bytes_sent": "$bytes_sent", '
        '"http_referer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"http_host": "$http_host", '
        '"server_name": "$server_name", '
        '"request_time": "$request_time", '
        '"upstream": "$upstream_addr", '
        '"upstream_connect_time": "$upstream_connect_time", '
        '"upstream_header_time": "$upstream_header_time", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_response_length": "$upstream_response_length", '
        '"upstream_cache_status": "$upstream_cache_status", '
        '"ssl_protocol": "$ssl_protocol", '
        '"ssl_cipher": "$ssl_cipher", '
        '"scheme": "$scheme", '
        '"request_method": "$request_method", '
        '"server_protocol": "$server_protocol", '
        '"pipe": "$pipe", '
        '"gzip_ratio": "$gzip_ratio", '
        '"http_cf_ray": "$http_cf_ray", '
        '"geoip2_data_country_name": "$geoip2_data_country_name", '
        '"geoip2_data_city_name": "$geoip2_data_city_name"'
        '}';


    access_log  /var/log/nginx/access.log json_analytics;

    # geoip_country /etc/nginx/GeoIP.dat;
    # geoip_city /etc/nginx/GeoIPCity.dat;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    upstream backend_upstream1 {
        server fastapi:8000;
    }

    upstream backend_upstream2 {
        server express:3001;
    }
    
    upstream frontend_upstream {
        server frontend:5173;
    }

    upstream backend_upstream3 {
        server django:8002;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://frontend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/ {
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_connect_timeout 300s;
            proxy_read_timeout 600s;
            proxy_pass http://backend_upstream1;

            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            # add_header 'Access-Control-Allow-Credentials' 'true';
        }

        location /api/v2/ {
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_connect_timeout 300s;
            proxy_read_timeout 600s;
            proxy_pass http://backend_upstream2;
            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            # add_header 'Access-Control-Allow-Credentials' 'true';
        }

        location /api/v3/ {
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_connect_timeout 300s;
            proxy_read_timeout 600s;
            proxy_pass http://backend_upstream3;
            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            # add_header 'Access-Control-Allow-Credentials' 'true';
        }

        location /stub_status {
            stub_status;
            allow 127.0.0.1;
            allow 172.18.0.0/16;
        }
    }

    # HTTPS server block configuration (to be enabled when SSL certs are available)
    # server {
    #     listen 443 ssl;
    #     server_name _;

    #     ssl_certificate /etc/nginx/ssl/nginx.crt;
    #     ssl_certificate_key /etc/nginx/ssl/nginx.key;

    #     ssl_session_cache shared:SSL:1m;
    #     ssl_session_timeout  10m;

    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;

    #     location / {
    #         proxy_pass http://frontend:5173;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     location /api/ {
    #         proxy_pass http://backend:8000;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     location /nginx_status {
    #         stub_status on;
    #         allow 127.0.0.1;
    #         deny all;
    #     }

    #     location /metrics {
    #         return 301 /nginx_status;
    #     }
    # }
}
